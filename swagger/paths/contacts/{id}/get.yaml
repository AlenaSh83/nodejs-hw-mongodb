tags:
  - Contacts
summary: Get contact by ID
operationId: getContactById
description: Returns a single contact by its ID. Requires authentication.
security:
  - bearerAuth: []
parameters:
  - in: path
    name: id
    required: true
    schema:
      type: string
      example: "60d5eca77dd870b8c9890f7d"
    description: The contact ID
responses:
  '200':
    description: Successfully found contact
    content:
      application/json:
        schema:
          type: object
          properties:
            status:
              type: integer
              example: 200
            message:
              type: string
              example: "Successfully found contact with id 60d5eca77dd870b8c9890f7d!"
            data:
              type: object
              properties:
                _id:
                  type: string
                  example: "60d5eca77dd870b8c9890f7d"
                name:
                  type: string
                  example: "John Doe"
                phoneNumber:
                  type: string
                  example: "+380501234567"
                email:
                  type: string
                  example: "john@example.com"
                isFavourite:
                  type: boolean
                  example: false
                contactType:
                  type: string
                  enum: [work, home, personal]
                  example: "personal"
                photo:
                  type: string
                  nullable: true
                  example: "https://res.cloudinary.com/..."
                userId:
                  type: string
                  example: "60d5eca77dd870b8c9890f7c"
                createdAt:
                  type: string
                  format: date-time
                updatedAt:
                  type: string
                  format: date-time
  '400':
    description: Invalid ID format
    content:
      application/json:
        schema:
          type: object
          properties:
            status:
              type: integer
              example: 400
            message:
              type: string
              example: "Invalid ID format"
  '401':
    description: Unauthorized - missing or invalid token
    content:
      application/json:
        schema:
          type: object
          properties:
            status:
              type: integer
              example: 401
            message:
              type: string
              example: "Authorization header missing"
  '404':
    description: Contact not found
    content:
      application/json:
        schema:
          type: object
          properties:
            status:
              type: integer
              example: 404
            message:
              type: string
              example: "Contact not found"